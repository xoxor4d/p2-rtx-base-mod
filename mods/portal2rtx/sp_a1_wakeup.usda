#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "Looks"
    {
        over "mat_1A4238FC6F23E23F"
        {
            over "Shader"
            {
                float inputs:reflection_roughness_constant = 1 (
                    customData = {
                        float default = 0.5
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Amount"
                    doc = "Higher roughness values lead to more blurry reflections, use 0 for perfectly smooth.  (Used if no texture is specified)."
                    hidden = false
                )
            }
        }

        over "mat_2F4777FDC4919180"
        {
            over "Shader"
            {
                color3f inputs:diffuse_color_constant = (0.000001, 9.9999e-7, 9.9999e-7) (
                    customData = {
                        float3 default = (0.2, 0.2, 0.2)
                        dictionary range = {
                            float3 max = (1, 1, 1)
                            float3 min = (0, 0, 0)
                        }
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo Color"
                    doc = "The base albedo color.  (Used if no texture is specified)"
                    hidden = false
                    renderType = "color"
                )
                asset inputs:diffuse_texture = @@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:metallic_constant = 0.435 (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Base Material"
                    displayName = "Metallic Amount"
                    doc = "How metallic is this material, 0 for not at all, 1 for fully metallic. (Used if no texture is specified)."
                    hidden = false
                )
                float inputs:reflection_roughness_constant = 1 (
                    customData = {
                        float default = 0.5
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Amount"
                    doc = "Higher roughness values lead to more blurry reflections, use 0 for perfectly smooth.  (Used if no texture is specified)."
                    hidden = false
                )
            }
        }
    }

    over "meshes"
    {
        over "mesh_5E37467C546C3B0D"
        {
            def DistantLight "DistantLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float inputs:angle = 0.3
                float inputs:colorTemperature = 6630
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 0.1
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (-1, -9.5, 40)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 6780
                float inputs:intensity = 0.3
                float inputs:radius = 50
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (9249.491721143326, 929.7940536857886, 567.038904370565)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.99999493, 1, 0.99999)
                float inputs:colorTemperature = 6990
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1.3
                float inputs:intensity = 100
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 27
                float inputs:shaping:cone:softness = 0.25
                float inputs:shaping:focus = 0
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (48.25721043003625, -0.04021125710363549, 67.69670160391425)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (9800.545797557112, 950.4991250993178, 906.9528979587553)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 6780
                float inputs:intensity = 0.05
                float inputs:radius = 50
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (9211.909909911334, 1367.5417445398518, 542.6088385524642)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.99999493, 1, 0.99999)
                float inputs:colorTemperature = 6990
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 2
                float inputs:intensity = 100
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 27
                float inputs:shaping:cone:softness = 0.25
                float inputs:shaping:focus = 0
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (59.843346326859546, -0.04021125710363549, 61.072371271505716)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (8277.88457683424, 898.944868060199, 913.8822589384636)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }
    }
}

