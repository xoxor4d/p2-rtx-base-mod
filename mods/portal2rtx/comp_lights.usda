#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {
        over "mesh_EE1468042CD36B54"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (1, 0, 0)
                float inputs:intensity = 100
                float inputs:radius = 2
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-5728.934752304967, 3487.958580504461, 210.09298352116923)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_E35268D874EB0631"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                float inputs:colorTemperature = 3690
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 5
                float inputs:radius = 6
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-5934.946671393083, 1961.8535023287184, 341.82427978515625)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_65C177097D8057E2"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.7339634, 0.8066514, 0.8301158)
                float inputs:colorTemperature = 6300
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 166.91469
                float inputs:radius = 7
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1572.5017257768418, 4341.382284018718, 3165.965095616532)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -500), (500, 500, 500)]
                color3f inputs:color = (0.045616426, 0.38368353, 0.7876448)
                float inputs:colorTemperature = 6300
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 40
                float inputs:radius = 3
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1579.3566162407997, 4344.443191044228, 3165.024471677764)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_1F51FEE7DC6C1566"
        {
            over "mesh"
            {
                custom uniform bool remix_category:ignore = 0
            }
        }

        over "mesh_CA8D61F6FB8B3EA4"
        {
            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-500, -500, -0), (500, 500, 0)]
                color3f inputs:color = (0.95752895, 0.07024343, 0.07024343)
                float inputs:intensity = 10
                float inputs:radius = 33
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2943.918650587729, 2367.7000658072184, -309.9027067872963)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_441B52DABAD3E5E6"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 4380
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 30
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, -20)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_502FF42705170A60"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 4590
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 25
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-8, 0, 40)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 4590
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 25
                float inputs:radius = 5.4738007
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-9.583930632497186, 4.1898374547599815e-7, 0.16728762259538144)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 3090
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 25
                float inputs:radius = 6
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-10.663521297294437, 39.833521163349474, 0.18613189042002887)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 3090
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 25
                float inputs:radius = 7.199967
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-9.268246195770757, -40.2623904912366, 0.16177734701636837)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_7B0252BA14C9E49E"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.99999, 0.99999)
                float inputs:colorTemperature = 5610
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 1
                float inputs:intensity = 100
                float inputs:radius = 15
                float inputs:shaping:cone:angle = 77.4
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0.9004998114325247, 0.7719054893148893, 0.012135126869651458)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.1937117960769683e-12, 5.6274984672199935e-12, -77.800670353187)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 4470
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 10
                float inputs:radius = 15
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, -75.26080945825845)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_6103CD93695E3861"
        {
            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 5700
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 140
                float inputs:length = 83
                float inputs:radius = 2.65
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.055674825595701805, -0.2740835111362685, 4.250388187582502)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_6EB305FE26CA62EF"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 5130
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 50
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.11666713360796166, -36.34240899056056, -6.0385801258391325)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_2308E72786651896"
        {
            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 4950
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 15
                float inputs:length = 85
                float inputs:radius = 2.3
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (3.960694633206117, -1.3615788081752385, 0.09115259528960706)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def CylinderLight "CylinderLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 5610
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 15
                float inputs:length = 85
                float inputs:radius = 2.3
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (3.9606946331986137, -1.3615788081714868, 10.33498288640962)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def CylinderLight "CylinderLight_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 5610
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 15
                float inputs:length = 85
                float inputs:radius = 2.3
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (3.9606946331889503, -1.361578808166655, -10.032199092159608)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_5E5ED4C15E8A8445"
        {
            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 6000
                bool inputs:enableColorTemperature = 1
                float inputs:exposure = 0.2
                float inputs:intensity = 140
                float inputs:length = 32
                float inputs:radius = 5.2
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2740.0023711389913, 33.01176853982009, -62.7464661821117)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_114FF158541AEC2F"
        {
            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 4830
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 50
                float inputs:radius = 6
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (28.748043060302603, -4308.351111295641, 88.79482328086421)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_5393010995C79C0A"
        {
            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 5940
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 100
                float inputs:length = 32
                float inputs:radius = 5.3
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (6837.961138258251, 448.8929108358003, 201.6985846691675)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_357AEE7B72C52ADC"
        {
            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 5580
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 30
                float inputs:length = 32
                float inputs:radius = 5.2
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-568.8113414557221, 687.7533375056016, 675.0131413852993)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_EF7C5B0637342410"
        {
            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 4410
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 1.2
                float inputs:length = 127
                float inputs:radius = 7.5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.4710788110496651, -0.0003780147861078831, -4.031081719145675)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_B39F548E6A88EFBE"
        {
            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                float inputs:colorTemperature = 4230
                bool inputs:enableColorTemperature = 1
                float inputs:intensity = 70
                float inputs:length = 80
                float inputs:radius = 2.82
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.05756797808248848, -3.450132339821721e-7, 3.917733101104261)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_5E37467C546C3B0D"
        {
            over "SphereLight_04"
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (0, 0, 0)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_1140D4D544443C49"
        {
            over "mesh"
            {
                custom uniform bool remix_category:world_ui = 0
            }
        }

        over "mesh_E48ADD201FFF44F2"
        {
            over "mesh"
            {
                custom uniform bool remix_category:alpha_blend_to_cutout = 0
                custom uniform bool remix_category:decal_Static = 0
                custom uniform bool remix_category:world_ui = 0
            }
        }

        over "mesh_7C52D44F3CF042CE"
        {
            over "mesh"
            {
                custom uniform bool remix_category:alpha_blend_to_cutout = 1
            }
        }

        over "mesh_92152B44DB90B137"
        {
            over "mesh"
            {
                custom uniform bool remix_category:alpha_blend_to_cutout = 1
                custom uniform bool remix_category:decal_Static = 1
            }
        }

        over "mesh_2FB182BF02E5CF9A"
        {
            over "mesh"
            {
                custom uniform bool remix_category:alpha_blend_to_cutout = 1
            }
        }

        over "mesh_FFA671D116C30901"
        {
            over "mesh"
            {
                custom uniform bool remix_category:alpha_blend_to_cutout = 1
            }
        }

        over "mesh_7467D42B5704A068"
        {
            over "mesh"
            {
                custom uniform bool remix_category:alpha_blend_to_cutout = 1
            }
        }

        over "mesh_278482DB69112D3C"
        {
            over "mesh"
            {
                custom uniform bool remix_category:alpha_blend_to_cutout = 1
            }
        }

        over "mesh_E48ADD200518FC5B"
        {
            over "mesh"
            {
                custom uniform bool remix_category:decal_Static = 0
                custom uniform bool remix_category:ignore_anti_culling = 1
            }
        }

        over "mesh_43D6E07BFFD86306"
        {
            over "mesh"
            {
                custom uniform bool remix_category:alpha_blend_to_cutout = 1
            }
        }

        over "mesh_647D385DBBF20CD4"
        {
            over "mesh"
            {
                custom uniform bool remix_category:alpha_blend_to_cutout = 1
            }
        }

        over "mesh_E33257431BC97D58"
        {
            over "mesh"
            {
                custom uniform bool remix_category:alpha_blend_to_cutout = 1
            }
        }

        over "mesh_9CC55AB402162A77"
        {
            over "mesh"
            {
                custom uniform bool remix_category:alpha_blend_to_cutout = 1
            }
        }

        over "mesh_1A3C089296AF59E8"
        {
            over "mesh"
            {
                custom uniform bool remix_category:alpha_blend_to_cutout = 1
            }
        }

        over "mesh_3191DE61EFDBA4A2"
        {
            over "mesh"
            {
                custom uniform bool remix_category:world_ui = 1
            }
        }

        over "mesh_E48ADD20CE09C1D6"
        {
            over "mesh"
            {
                custom uniform bool remix_category:alpha_blend_to_cutout = 0
                custom uniform bool remix_category:decal_Static = 0
                custom uniform bool remix_category:world_ui = 0
            }
        }
    }

    over "Looks"
    {
        over "mat_9510F02F096FCE70"
        {
            over "Shader"
            {
                float inputs:emissive_intensity = 1.5 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/textures_model/lights/bts_flurecent_lamp_emissive.e.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
            }
        }

        over "mat_6B2C92403F85C296"
        {
            over "Shader"
            {
                float inputs:emissive_intensity = 1.5 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/textures_model/lights/6B2C92403F85C296_Emissive.e.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
            }
        }

        over "mat_A2ACD14E9C8C6725"
        {
            over "Shader"
            {
                float inputs:emissive_intensity = 0.6 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/textures_model/lights/A2ACD14E9C8C6725_emissive.e.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
            }
        }

        over "mat_6D8A8352BEA2E5BE"
        {
            over "Shader"
            {
                float inputs:emissive_intensity = 0.2 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/textures_model/lights/6D8A8352BEA2E5BE_emissive.e.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
            }
        }

        over "mat_327A766286A8109A"
        {
            over "Shader"
            {
                float inputs:emissive_intensity = 0.2 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/indicator_cross_emissive.e.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
            }
        }

        over "mat_814C45E277631399"
        {
            over "Shader"
            {
                float inputs:emissive_intensity = 0.2 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/814C45E277631399_emissive.e.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
            }
        }

        over "mat_B2826C39C23A5F38"
        {
            over "Shader"
            {
                float inputs:emissive_intensity = 0.2 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/B2826C39C23A5F38_emissive.e.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
            }
        }

        over "mat_27FFA4D734EE1A88"
        {
            over "Shader"
            {
                float inputs:emissive_intensity = 0.1 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/indicator_check_emissive.e.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
            }
        }

        over "mat_CD4E401A7AF9EF9C"
        {
            over "Shader"
            {
                float inputs:emissive_intensity = 0.15 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/textures_model/lights/CD4E401A7AF9EF9C_emissive.e.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
            }
        }

        over "mat_478C69320AB919AF"
        {
            over "Shader"
            {
                float inputs:emissive_intensity = 0.7 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/textures_model/lights/478C69320AB919AF_emissive.e.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
            }
        }

        over "mat_45C3EC908B8E003D"
        {
            over "Shader"
            {
                float inputs:emissive_intensity = 0.4 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/45C3EC908B8E003D_emissive.e.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
            }
        }

        over "mat_E65A67BD6EABB269"
        {
            over "Shader"
            {
                float inputs:emissive_intensity = 0.4 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/E65A67BD6EABB269_emissive.e.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
            }
        }

        over "mat_1241F0777F0161A8"
        {
            over "Shader"
            {
                custom float inputs:emissive_intensity = 0.25
                custom asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/indicator_check_emissive.e.rtex.dds@
                custom bool inputs:enable_emission = 1
            }
        }

        over "mat_FC12FF878221D6A9"
        {
            over "Shader"
            {
                custom int inputs:alpha_test_type = 4
                custom bool inputs:blend_enabled = 1
                custom int inputs:blend_type = 0
                asset inputs:diffuse_texture = @./assets/textures_world/emissive/indicator_dots_orange_new_albedo.a.rtex.dds@
                custom float inputs:emissive_intensity = 0.25
                custom asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/indicator_dots_orange_new_emissive.e.rtex.dds@
                custom bool inputs:enable_emission = 1
                custom bool inputs:use_legacy_alpha_state = 1
            }
        }

        over "mat_B03368A163247DBA"
        {
            over "Shader"
            {
                custom float inputs:emissive_intensity = 0.25
                custom asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/indicator_cross_emissive.e.rtex.dds@
                custom bool inputs:enable_emission = 1
            }
        }

        over "mat_F427FFE3E9D5340F"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/textures_world/emissive/indicator_dots_blue_new_albedo.a.rtex.dds@
                custom float inputs:emissive_intensity = 0.2
                custom asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/indicator_dots_blue_new_emissive.e.rtex.dds@
                custom bool inputs:enable_emission = 1
                custom float inputs:metallic_constant = 0
                custom float inputs:reflection_roughness_constant = 1
            }
        }

        over "mat_DD89334D3B47430B"
        {
            over "Shader"
            {
                custom float inputs:emissive_intensity = 0.2
                custom asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/DD89334D3B47430B_emissive.e.rtex.dds@
                custom bool inputs:enable_emission = 1
                custom bool inputs:enable_thin_film = 0
                custom bool inputs:thin_film_thickness_from_albedo_alpha = 0
            }
        }

        over "mat_F264CEADCFB63DAC"
        {
            over "Shader"
            {
                custom float inputs:emissive_intensity = 0.2
                custom asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/F264CEADCFB63DAC_emissive.e.rtex.dds@
                custom bool inputs:enable_emission = 1
                custom bool inputs:enable_thin_film = 0
            }
        }

        over "mat_B80469F073A6EC8E"
        {
            over "Shader"
            {
                custom float inputs:emissive_intensity = 0.15
                custom asset inputs:emissive_mask_texture = @./assets/textures_model/lights/B80469F073A6EC8E_emissive.e.rtex.dds@
                custom bool inputs:enable_emission = 1
            }
        }

        over "mat_B58F7CDCB43EE901"
        {
            over "Shader"
            {
                custom float inputs:emissive_intensity = 8
                custom asset inputs:emissive_mask_texture = @./assets/textures_model/lights/B58F7CDCB43EE901_emissive.e.rtex.dds@
                custom bool inputs:enable_emission = 1
            }
        }

        over "mat_05E0DACB958FC611"
        {
            over "Shader"
            {
                custom float inputs:emissive_intensity = 0.25
                custom asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/indicator_dots_blue_col.e.rtex.dds@
                custom bool inputs:enable_emission = 1
            }
        }

        over "mat_738071F1F3739275"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/textures_world/emissive/indicator_dots_logo_blue_col_2x.a.rtex.dds@
                custom float inputs:emissive_intensity = 0.25
                custom asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/indicator_dots_logo_blue_col_2x.a.rtex.dds@
                custom bool inputs:enable_emission = 1
                custom float inputs:reflection_roughness_constant = 1
            }
        }

        over "mat_1E332B643E202A43"
        {
            over "Shader"
            {
                custom int inputs:alpha_test_type = 4
                custom bool inputs:blend_enabled = 0
                custom int inputs:blend_type = 1
                asset inputs:diffuse_texture = @./assets/textures_world/emissive/indicator_dots_logo_orange_col_2x.a.rtex.dds@
                custom float inputs:emissive_intensity = 0.25
                custom asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/indicator_dots_logo_orange_col_2x.a.rtex.dds@
                custom bool inputs:enable_emission = 1
                custom bool inputs:inverted_blend = 0
                custom float inputs:reflection_roughness_constant = 1
                custom bool inputs:use_legacy_alpha_state = 1
            }
        }

        over "mat_D6B4397B281D4F11"
        {
            over "Shader"
            {
                custom float inputs:emissive_intensity = 0.25
                custom asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/indicator_dots_orange_col.e.rtex.dds@
                custom bool inputs:enable_emission = 1
            }
        }

        over "mat_2D6F5494863C751C"
        {
            over "Shader"
            {
                custom float inputs:alpha_test_reference_value = 0
                custom int inputs:alpha_test_type = 4
                custom bool inputs:blend_enabled = 0
                custom int inputs:blend_type = 0
                custom color3f inputs:diffuse_color_constant = (0.9999942, 1, 0.99999)
                asset inputs:diffuse_texture = @@
                custom color3f inputs:emissive_color_constant = (0.969112, 0.9420969, 0.84189266)
                custom float inputs:emissive_intensity = 10
                custom asset inputs:emissive_mask_texture = @@
                custom bool inputs:enable_emission = 1
                custom bool inputs:inverted_blend = 0
                custom float inputs:metallic_constant = 0
                custom asset inputs:normalmap_texture = @@
                custom float inputs:opacity_constant = 1
                custom float inputs:reflection_roughness_constant = 1
                custom bool inputs:use_legacy_alpha_state = 1
            }
        }

        over "mat_00000000B6526B8B"
        {
            over "Shader"
            {
                custom float inputs:alpha_test_reference_value = 1
                custom int inputs:alpha_test_type = 4
                custom bool inputs:blend_enabled = 1
                custom int inputs:blend_type = 8
                custom color3f inputs:emissive_color_constant = (1, 0.99999, 0.99999)
                custom float inputs:emissive_intensity = 0.08
                custom bool inputs:enable_emission = 1
                custom bool inputs:enable_thin_film = 0
                custom bool inputs:inverted_blend = 0
                custom float inputs:metallic_constant = 0
                custom float inputs:reflection_roughness_constant = 0.345
                custom bool inputs:use_legacy_alpha_state = 0
            }
        }

        over "mat_00000000ACB5D322"
        {
            over "Shader"
            {
                custom float inputs:alpha_test_reference_value = 0
                custom int inputs:alpha_test_type = 4
                custom bool inputs:blend_enabled = 1
                custom int inputs:blend_type = 3
                custom color3f inputs:emissive_color_constant = (0.29803923, 0.69803923, 0.81960785)
                custom float inputs:emissive_intensity = 0.05
                custom bool inputs:enable_emission = 1
                custom bool inputs:enable_thin_film = 0
                custom bool inputs:inverted_blend = 0
                custom float inputs:metallic_constant = 0
                custom float inputs:reflection_roughness_constant = 0.42499998
                custom float inputs:thin_film_thickness_constant = 0
                custom bool inputs:thin_film_thickness_from_albedo_alpha = 0
                custom bool inputs:use_legacy_alpha_state = 0
            }
        }

        over "mat_0000000029460AAB"
        {
            over "Shader"
            {
                custom int inputs:alpha_test_type = 4
                custom bool inputs:blend_enabled = 1
                custom color3f inputs:emissive_color_constant = (0.29411766, 0.7019608, 0.8235294)
                custom float inputs:emissive_intensity = 0.58
                custom bool inputs:enable_emission = 1
                custom bool inputs:enable_thin_film = 1
                custom float inputs:reflection_roughness_constant = 0.325
                custom bool inputs:use_legacy_alpha_state = 0
            }
        }

        over "mat_00000000D238F0CC"
        {
            over "Shader"
            {
                custom int inputs:alpha_test_type = 4
                custom bool inputs:blend_enabled = 1
                custom color3f inputs:emissive_color_constant = (0.29803923, 0.69803923, 0.827451)
                custom float inputs:emissive_intensity = 0.58
                custom bool inputs:enable_emission = 1
                custom bool inputs:enable_thin_film = 1
                custom float inputs:reflection_roughness_constant = 0.32
                custom bool inputs:use_legacy_alpha_state = 0
            }
        }

        over "mat_410F8898C41D1F4B"
        {
            over "Shader"
            {
                custom color3f inputs:emissive_color_constant = (1, 0.99999, 0.99999)
                custom float inputs:emissive_intensity = 0.2
                custom asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/410F8898C41D1F4B_emissive.e.rtex.dds@
                custom bool inputs:enable_emission = 1
            }
        }

        over "mat_711F0B0C341F0758"
        {
            over "Shader"
            {
                custom float inputs:emissive_intensity = 0.2
                custom asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/711F0B0C341F0758_emissive.e.rtex.dds@
                custom bool inputs:enable_emission = 1
            }
        }

        over "mat_3CAC65C63E5F0D47"
        {
            over "Shader"
            {
                custom float inputs:emissive_intensity = 0.2
                custom asset inputs:emissive_mask_texture = @./assets/textures_world/emissive/3CAC65C63E5F0D47_emissive.e.rtex.dds@
                custom bool inputs:enable_emission = 1
            }
        }

        over "mat_0000000067A4EEAF"
        {
            over "Shader"
            {
                custom int inputs:alpha_test_type = 4
                custom bool inputs:blend_enabled = 1
                custom int inputs:blend_type = 3
                custom color3f inputs:emissive_color_constant = (0.29803923, 0.69803923, 0.827451)
                custom float inputs:emissive_intensity = 0.1
                custom asset inputs:emissive_mask_texture = @@
                custom bool inputs:enable_emission = 1
                custom bool inputs:enable_thin_film = 0
                custom float inputs:reflection_roughness_constant = 0.84
                custom bool inputs:use_legacy_alpha_state = 0
            }
        }

        over "mat_00000000D276CEF6"
        {
            over "Shader"
            {
                custom int inputs:alpha_test_type = 4
                custom bool inputs:blend_enabled = 1
                custom int inputs:blend_type = 3
                custom color3f inputs:emissive_color_constant = (0.87644786, 0.83206415, 0.73093724)
                custom float inputs:emissive_intensity = 0.2
                custom bool inputs:enable_emission = 1
                custom bool inputs:use_legacy_alpha_state = 0
            }
        }

        over "mat_98AF85ED5E27C003"
        {
            over "Shader"
            {
                custom bool inputs:enable_emission = 0
                custom bool inputs:enable_thin_film = 0
            }
        }

        over "mat_AAAB3C78C245F8A3"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @@
                custom color3f inputs:emissive_color_constant = (1, 0.99999, 0.99999)
                custom float inputs:emissive_intensity = 0.2
                custom asset inputs:emissive_mask_texture = @./assets/textures_world/water/water_normal_anim_02_lava_emissive.e.rtex.dds@
                custom bool inputs:enable_emission = 1
                custom float inputs:metallic_constant = 0
                custom asset inputs:normalmap_texture = @@
                custom float inputs:reflection_roughness_constant = 1
                custom int inputs:sprite_sheet_cols = 8
                custom int inputs:sprite_sheet_fps = 20
                custom int inputs:sprite_sheet_rows = 8
            }
        }

        over "mat_40A766B64E63562E"
        {
            over "Shader"
            {
                custom int inputs:alpha_test_type = 4
                custom bool inputs:blend_enabled = 0
                custom int inputs:blend_type = 3
                custom color3f inputs:emissive_color_constant = (0.992278, 0.992268, 0.992268)
                custom float inputs:emissive_intensity = 0.2
                custom bool inputs:enable_emission = 1
                custom bool inputs:enable_thin_film = 1
                custom bool inputs:use_legacy_alpha_state = 0
            }
        }

        over "mat_D5982F804642F86C"
        {
            over "Shader"
            {
                custom float inputs:emissive_intensity = 1.6
                custom asset inputs:emissive_mask_texture = @./assets/textures_model/lights/D5982F804642F86C_emissive.e.rtex.dds@
                custom bool inputs:enable_emission = 1
            }
        }

        over "mat_00000000CBBE8402"
        {
            over "Shader"
            {
                custom int inputs:alpha_test_type = 4
                custom bool inputs:blend_enabled = 1
                custom int inputs:blend_type = 3
                custom color3f inputs:emissive_color_constant = (0.13845946, 0.5727703, 0.66409266)
                custom float inputs:emissive_intensity = 0.5
                custom bool inputs:enable_emission = 1
                custom float inputs:reflection_roughness_constant = 0.44
                custom bool inputs:use_legacy_alpha_state = 0
            }
        }

        over "mat_6BCE0D33B3436500"
        {
            over "Shader"
            {
                custom float inputs:emissive_intensity = 1
                custom asset inputs:emissive_mask_texture = @./assets/textures_model/lights/6BCE0D33B3436500_emissive.e.rtex.dds@
                custom bool inputs:enable_emission = 1
            }
        }

        over "mat_000000002ED20A74"
        {
            over "Shader"
            {
                custom int inputs:alpha_test_type = 4
                custom bool inputs:blend_enabled = 1
                custom int inputs:blend_type = 3
                custom color3f inputs:emissive_color_constant = (0.9498069, 0.9254026, 0.8544595)
                custom float inputs:emissive_intensity = 0.3
                custom bool inputs:enable_thin_film = 1
                custom bool inputs:use_legacy_alpha_state = 0
            }
        }
    }
}

